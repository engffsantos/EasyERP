name: Python CI

on:
  push:
    branches: [ "main", "develop" ] # Aciona em push para main e develop
  pull_request:
    branches: [ "main", "develop" ] # Aciona em pull requests para main e develop

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11" # Usar a mesma versão do ambiente de desenvolvimento

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/dev.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format with black
      run: |
        black --check .
        
    - name: Check imports with isort
      run: |
        isort --check-only .

    - name: Test with pytest
      run: |
        # Configurar variáveis de ambiente para teste
        export FLASK_ENV=testing
        export DATABASE_URL=sqlite:///:memory:
        export SECRET_KEY=test_secret_key
        export MAIL_SUPPRESS_SEND=True
        pytest tests/ -v # Executa todos os testes na pasta tests com saída detalhada
        
    - name: Generate coverage report
      run: |
        coverage run -m pytest tests/
        coverage report -m
        coverage xml
        
    - name: Check coverage threshold
      run: |
        coverage report --fail-under=70

